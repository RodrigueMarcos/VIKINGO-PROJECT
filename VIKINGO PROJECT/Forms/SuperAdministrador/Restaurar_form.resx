<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BRestaurar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>