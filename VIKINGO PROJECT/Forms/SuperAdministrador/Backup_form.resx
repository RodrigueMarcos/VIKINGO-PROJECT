<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Bbackup.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAB3dJREFUWEe9V2tQlNcZVtMknV4mnfzopDPp9Ic/OtoZp+lkQK2pQYhJAIFd2F0g
        8cIlq2G2WKpEIVFIJMMlILCwCMR4bWBikAVcWFkBd8NFLhGjJoACVhRQQGARFVhgn77nfN8HLmw6+VH6
        zjxzLt/leZ73Ped8u8ucxcWLF1+6fPnymv8Vrl27tqa+vv4P4uv/e+Tn5wcZqy229rtDaO99AN5yUJ+N
        RXTwa2Irjjt6h8XWcXyjbxiWpiv24tLSGJHmx0MVsa/FIzobPikl8EougWeSHm8nFfO+d0oph1eyno+9
        6B7vz6S5Emz5rOypcSl8Us9hS2oZ/DMq4BV/Etv3J40QxQqByXmscFFpBt+KzeckbycW4y0CE+FJY29G
        yFEKWVoZQnKM2JVXiW3ZFURWxgm9U8pIGIngYgT4pZfD99NCbAg/OKtWq18QuZzGc68G7rZ5HjxGrgXn
        jJi7JfiSu0+L6vHN9VsYGB7F5OQkbDYbJiYm0HPvAQzNHdh7ssaBnInyO1wO/5QirA2PQ9juj1aJXItD
        JpP97s+qf9i9Pz7NiblzEdGnL6K7bxCzs7NgYZueQd/wOLrvWzFgfYxZux12wvT0NC613UZYronSfw6+
        aQYuICBVj7U7D0G1K+Y1kW5xyHao/7ImaA98Egq4Y08Cy0RqySVMTk1x4p6hMaSVX4YyswKB2gq8k2Xk
        LncQ4enadow9meJChkYf4p+nzJyclUBxuAwbNCnwComSiXSLw10Z4vHKthj4JZ4RS6BHzJcWTFGa2UtN
        V29DfthArgRnJ83XoW+6wfuy9Ar4EllIXhXaadWzGCQRISRMlm6EMsOA1yLT4LEjSiPSLY4N/iHvvhoa
        B7/kIr7YZER0Z2CEv+zSzX5OzNxKddU33UQVifIlUcwlm5NnGPGOzoT+kXEu2nz9NmQ0x7L1t6hMbAr9
        IE6kWxzrFepoV3UC1auESMpwqKiBv8Q2M4OwvAu8plwACWFk56/cQn1HryigghNxUD+x9FvhWds01Edr
        oNIa4Ratg1vo/myRbnG4KNSJ6yOSoUwXiMqab3L33/cM8jFf1ZRuBpZuyw93+DVG7p95nrtnfTn1lVmV
        GH8yyUVkVrQimLLiEZOP19/7sJiolguMC8I1YOeJDbsP41T1dxgasWJiUlh4k1M2Pi6q+wHelBnmmNW9
        ubMfPYOj3LHkfk4MoWfQyp8/S6V6N7cabx44jo3hH5mJyqmA5a4qjdFtbzYCMspRUNfB1bNgbXFzJ6Xd
        IGwtcs/w8dkmjD2eQFF9GxfxdBmYiIHRcf58YUMHgnOq4PXJv7BRfbCNuJ4RKB1jhUtQZOPm2M/50ckc
        6iq/ox0wgxzTVSoBS7uQeonMj+6LOG7GrQErTK1dUGgF5/KM84g8acEMrR0Wh/QtCCQBsqSv4fb+oWHi
        elagdIyfuQRH9XjGHYeMSKTFti3HJNSd5rhD7lJwKs8U3AZSfS3tvUgubYG/tpLD8v1tnjnrowkE6S5A
        mU1IK4G7JmmauH4hUDrG82u373vkS4eQlOKnwVY92wmMlLskSOlmfUYqF8lP0fnATkwm4AtzGxRErtBV
        ISjTgI1/T7Z7yoMXf5pffnn1i+tCYmfllCbm0kfc29ICSyltxuPHT3Cu+QbC8qvmBEiOA7JM0JywwHL9
        33Opb+q6DxURK3XVXERwFp0FkanwUe92FWnnw21L4J9cQg/Y5SlnBdfiVpMWVl37Xe6I4REJ+fbmXRQ1
        tHG3+sZ2XO3uo10jbDsGc1sfgnNryDmlnkSwDATrKuG2RwuPrZGeIu18bFKGurm+9wkUafQdF2vOHbL0
        8pQbkW68gjsPHnJ3UjAyKVi/e2AMyYYrnFRFzlU5DDUIPFKDrblVcN+Xg03bo8JE2vlYJwsJWPd+IhR0
        CDHnLPVSrdmqFmpNdabx3oJ6nKrtoIXXh+buAZipPfENfYoLG7lT7pqIWZ+1TAxrt+bRWfDhUTqOY2JF
        2vlwVeyKZB+LQDoyGZlQX8k9CZDEEPzplPPXmnhd2csD2CIjBBIJc8pFiAtPkS2kn2FbvhmecSfgFh6b
        SpSOh9FaZUTCXyMS4R2bA4/oLA73vVq4i332M421b3yQLULHsZlSunmf0L65/wiHMCfMvyHOs7Es7ih/
        dtPOg18SpYOA5ev9tufmHT+N3v5+AX1i239vfs4pnrrOn/mx+++h7959FJ+rwJbwPVXE6XAaPpOQmHSh
        tbUV4+PjS4rOzk4cyc1jx7HDafisNlt3raGhASMjI7BarUuCsbExdHV1oaCw8CFx/lKgFuLnhV+dGWpp
        aQHLwlLDYCifXb169UsiN49fm0ym0aamJjQ2Ns6BjaW5hdckOLu+8LmFsFgs9tDQ0D+K3Dx+o9fru+rq
        6rAQtbW1Tvs/FdXV1ThTkIBjR5Pn5oxG46OVK1f+XuTm8YJGo9HSzTP0vxA/BWaz2em8BOl6TU0Nvvj8
        AAoKjknX7PHx8V8R528FaiGeI7y+atWqeB8fn9ylhIuLSyJxsW/Bok/yrwisLq8sMdg/I/b3zPnPsv8T
        xFi27D/BVAcJCAIIpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>